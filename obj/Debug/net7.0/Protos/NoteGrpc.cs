// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/note.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace NoteGrpc {
  /// <summary>
  /// The note service definition.
  /// </summary>
  public static partial class Note
  {
    static readonly string __ServiceName = "note.Note";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NoteGrpc.CreateNoteRequest> __Marshaller_note_CreateNoteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NoteGrpc.CreateNoteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NoteGrpc.CreateNoteResponse> __Marshaller_note_CreateNoteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NoteGrpc.CreateNoteResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NoteGrpc.ReadNoteRequest> __Marshaller_note_ReadNoteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NoteGrpc.ReadNoteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NoteGrpc.ReadNoteResponse> __Marshaller_note_ReadNoteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NoteGrpc.ReadNoteResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NoteGrpc.GetAllRequest> __Marshaller_note_GetAllRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NoteGrpc.GetAllRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NoteGrpc.GetAllResponse> __Marshaller_note_GetAllResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NoteGrpc.GetAllResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NoteGrpc.UpdateNoteRequest> __Marshaller_note_UpdateNoteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NoteGrpc.UpdateNoteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NoteGrpc.UpdateNoteResponse> __Marshaller_note_UpdateNoteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NoteGrpc.UpdateNoteResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NoteGrpc.DeleteNoteRequest> __Marshaller_note_DeleteNoteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NoteGrpc.DeleteNoteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NoteGrpc.DeleteNoteResponse> __Marshaller_note_DeleteNoteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NoteGrpc.DeleteNoteResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NoteGrpc.CreateNoteRequest, global::NoteGrpc.CreateNoteResponse> __Method_CreateNote = new grpc::Method<global::NoteGrpc.CreateNoteRequest, global::NoteGrpc.CreateNoteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateNote",
        __Marshaller_note_CreateNoteRequest,
        __Marshaller_note_CreateNoteResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NoteGrpc.ReadNoteRequest, global::NoteGrpc.ReadNoteResponse> __Method_ReadNote = new grpc::Method<global::NoteGrpc.ReadNoteRequest, global::NoteGrpc.ReadNoteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReadNote",
        __Marshaller_note_ReadNoteRequest,
        __Marshaller_note_ReadNoteResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NoteGrpc.GetAllRequest, global::NoteGrpc.GetAllResponse> __Method_ListNotes = new grpc::Method<global::NoteGrpc.GetAllRequest, global::NoteGrpc.GetAllResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListNotes",
        __Marshaller_note_GetAllRequest,
        __Marshaller_note_GetAllResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NoteGrpc.UpdateNoteRequest, global::NoteGrpc.UpdateNoteResponse> __Method_UpdateNotes = new grpc::Method<global::NoteGrpc.UpdateNoteRequest, global::NoteGrpc.UpdateNoteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateNotes",
        __Marshaller_note_UpdateNoteRequest,
        __Marshaller_note_UpdateNoteResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NoteGrpc.DeleteNoteRequest, global::NoteGrpc.DeleteNoteResponse> __Method_DeleteNote = new grpc::Method<global::NoteGrpc.DeleteNoteRequest, global::NoteGrpc.DeleteNoteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteNote",
        __Marshaller_note_DeleteNoteRequest,
        __Marshaller_note_DeleteNoteResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::NoteGrpc.NoteReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Note</summary>
    [grpc::BindServiceMethod(typeof(Note), "BindService")]
    public abstract partial class NoteBase
    {
      /// <summary>
      /// Create
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NoteGrpc.CreateNoteResponse> CreateNote(global::NoteGrpc.CreateNoteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Read single
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NoteGrpc.ReadNoteResponse> ReadNote(global::NoteGrpc.ReadNoteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Read list
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NoteGrpc.GetAllResponse> ListNotes(global::NoteGrpc.GetAllRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NoteGrpc.UpdateNoteResponse> UpdateNotes(global::NoteGrpc.UpdateNoteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NoteGrpc.DeleteNoteResponse> DeleteNote(global::NoteGrpc.DeleteNoteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(NoteBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateNote, serviceImpl.CreateNote)
          .AddMethod(__Method_ReadNote, serviceImpl.ReadNote)
          .AddMethod(__Method_ListNotes, serviceImpl.ListNotes)
          .AddMethod(__Method_UpdateNotes, serviceImpl.UpdateNotes)
          .AddMethod(__Method_DeleteNote, serviceImpl.DeleteNote).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, NoteBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateNote, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NoteGrpc.CreateNoteRequest, global::NoteGrpc.CreateNoteResponse>(serviceImpl.CreateNote));
      serviceBinder.AddMethod(__Method_ReadNote, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NoteGrpc.ReadNoteRequest, global::NoteGrpc.ReadNoteResponse>(serviceImpl.ReadNote));
      serviceBinder.AddMethod(__Method_ListNotes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NoteGrpc.GetAllRequest, global::NoteGrpc.GetAllResponse>(serviceImpl.ListNotes));
      serviceBinder.AddMethod(__Method_UpdateNotes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NoteGrpc.UpdateNoteRequest, global::NoteGrpc.UpdateNoteResponse>(serviceImpl.UpdateNotes));
      serviceBinder.AddMethod(__Method_DeleteNote, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NoteGrpc.DeleteNoteRequest, global::NoteGrpc.DeleteNoteResponse>(serviceImpl.DeleteNote));
    }

  }
}
#endregion
